问题: 1.什么是BOM
      2. 什么是浏览器的顶级对象window
      3. 页面加载事件和注意事项
      4. 两种定时器函数以及区别
      5. js执行机制
      6. location对象完成页面间跳转
      7. navigator对象涉及的属性
      8. history提供的方法实现页面刷新

1. BOM: Borswer Object Model 浏览器对象模型
    提供了独立于内容而与 浏览器窗口进行交互的对象, 核心对象! window!

    构成:              window
         document location navigation screen history

    关于window: .1 同时js访问浏览器窗口的一个接口
                .2 他是一个全局对象.定义在全局作用域中的变量\函数都会变成window对象的属性和方法

    JavaScript语法标准化组织: ECMA , DOM : W3C , BOM: 缺乏标准,最初是Netspace浏览器标准的一部分(兼容性差)

2. DOM 与 BOM  区别
            DOM                                             BOM
    (一个页面就是一个文档) ducument 当一个对象           把浏览器当作对象
    顶级对象 document                                     window
    操作页面中的元素                                    学习浏览器窗口交互的一些对象
    W3C标准规范                                     缺乏标准,浏览器厂商在各自浏览器上定义的,兼容性差

3. 窗口加载事件,调整窗口大小事件: onresize
          window.onload,当文档内容全部加载完成后会触发该事件(包括图像\脚本文件\css文件等)
          DOMContentLoaded , 仅当DOM加载完成,不包括表,图片,flash等等  ie9以上 比如页面图片过多,访问到onload花费时间就很长,交互效果不能实现

   调整窗口大小事件: onresize  
          利用此事件完成响应式布局, window.innerWidth 当前屏幕宽度
       

3. !!!! js执行机制 !!!
    js单线程  
    同步异步
    同步任务: 都在主线程上执行,形成一个执行栈
    异步任务: js的异步都是通过回调函数实现的.一般而言有3种类型:
            .1 普通事件: click,resize等
            .2 资源加载: load,error等
            .3 定时器: setInterval,setTimeout等
            异步任务相关  回调函数 添加到任务队列/消息队列 中.
    
    执行机制:
        1.先执行 执行栈(主线程) 中的同步任务
        2.异步任务(回调函数)放入队列中.  (中途经过 异步进程处理, 处理完成的放入 队列中)
        3.执行栈中所有同步任务执行完毕,系统就按照次序读取 任务队列 中的异步任务,
          于是被读取的异步任务结束等待状态,进入执行栈,开始执行.
        4.事件循环: 主线程不断的重复获得任务再执行任务(去任务队列里拿任务到主线程执行)的机制,称为事件循环(event loop)

4. this指向问题:

    1.全局作用域下或者普通函数中 this指向全局对象window(注意定时器里面的this指向window)

    2. 方法调用中谁调用this指向谁

    3.构造函数中 this 指向构造函数的实例

5. 两种定时器
    1. setTimeout(调用函数,延时时间)  只执行一次!!
      延时时间:单位毫秒.可以省略,为0,即立即执行
      调用函数: 可以直接写函数也可以写函数名 (或 '函数名()' 不推荐)
      可能有很多定时器,给定时器加标识符(名字)
      清除:clearTimeout(定时器名字)

    2. setInterval(调用函数,延时时间)  每个一段时间执行一次

6.  location对象:
                window对象提供了一个location属性用于获取或设置窗体的URL,并可用于解析URL.
                这个属性返回的是对象,所以将这个属性成为location对象
                URL:统一资源定位符(Uniform Resource Locator)  
                    协议://主机(域名)[:端口]/路径/[?参数]#片段  (#后面内容 常见于连接 锚点)
                        http://localhost:8080/mian?age=12#link

    location对象的属性:
             !!!.href  获取/设置整个url
                .host  返回主机(域名)
                .port  返回端口
                .pathname  返回路径
             !!!.search  返回参数
                .hash   返回片段
