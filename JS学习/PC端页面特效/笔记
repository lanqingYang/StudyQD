问题：  
     .1 常见的offset系列属性的作用
     .2 常见的client系列属性的作用
     .3 常见的scroll系列属性的作用
     .4 封装简单动画函数
     .5 页面轮播图


1. offset系列 （偏移量）
     offset： 可以动态的得到该元素的位置、大小等。
                1. 获得元素距离 ！带有定位父元素！ 的位置             Element.offsetTop、offsetLeft 
                2. 获得元素自身的大小（宽度高度=width+padding+border） offsetWidth、offsetHeight
                3. ps：返回数值都不带单位
                4. 返回元素带有定位的父级元素 ，没有返回body       offsetParent

   offset与style区别:
            offset                                   style
    可以得到任意样式表中的值                   只能得到行内样式表中的值
    获取的数值无单位                           获取带单位字符串
    offsetWidth包括padding、border、width     不含padding、boder
    offsetWidth只读，不能赋值                  style.width可读写属性
     总结：  用于获取！元素大小位置更好                  用于更改！元素值更好！！

2. client系列
                element.clientTop 返回元素上边框 border 的大小
                element.clientLeft 左边框
                .clientWidth       包括padding，内容width，不带boder的宽度，返回值不带单位
                .clientHeight       高度

3. scroll系列
               ! element.scrollTop   返回被卷去的上侧距离，返回数值不带单位 = 加上内容总高度-盒子的高度
               ! element.scrollLeft  ···左侧距离
                .scrollWidth        自身实际的宽度，不含边框，返回值不带单位
                .scrollHeight       ··高度

     offsetWidth、  .clientWidth 、.scrollWidth 区别
          offsetWidth 返回宽度包括border
          .clientWidth 不包括border 
          .scrollWidth 不包括border 内容长度包括超出盒子长度的内容部分

     主要用法：
          offset系列 经常用于获得元素的位置  offsetTop、offsetLeft
          client系列 经常用于获取元素大小    clientWidth、clientHeight
          scroll系列 经常用于获取滚动距离    scrollTop、scrollLeft
     !! 页面的滚动距离通过  window.pageX/YOffset 获取

4. 立即执行函数
     (function() {})()
      另一种
      (function (){}())
      多个匿名函数要用 ';' 隔开

      作用： !独立创建了一个作用域，里面所有的都是局部变量，不会又命名冲突的情况

5. mouseover和mouseenter区别
     mouseover会冒泡  mouseenter（mouseleave）不会

6. 节流阀
     防止轮播图按钮连续点击造成播放过快
     节流阀目的： 当上一个函数动画内容执行完毕，再去执行下一个函数动画，让事件无法连续触发
     核心思路： 利用回调函数，添加一个变量来控制，锁住函数和解锁函数。

7. 本地存储
 本地存储特性： .1 数据存储在用户浏览器中
                  .2 设置、读取方便、甚至页面刷新不丢失数据
                  .3 容量较大，sessionStorage约5M、localStorage约20M
                  .4 只能存储字符串，可以将对象JSON.stringfy()编码后存储

8. 数据存储的两种方式 (window.)sessionStorage、localStorage 以及他们的区别
   1. sessionStorage：    
          .1 生命周期为关闭浏览器窗口
          .2 同一个窗口(页面)下数据可以共享
          .3 以键值对形式存储使用
   2. localStorage:
          .1 生命周期永久，除非手动删除
          .2 可以多窗口(页面)共享(同一浏览器可以共享)
          .3 以键值对的形式存储使用

    






    